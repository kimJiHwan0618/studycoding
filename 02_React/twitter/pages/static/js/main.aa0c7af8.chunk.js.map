{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","console","log","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","marginLeft","faGithub","Nweer","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","class","faTrash","faPencilAlt","NweetFactory","userObj","tweet","setTweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","evt","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","marginTop","nweet","Nweet","Navigation","display","justifyContent","to","marginRight","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa0c7af8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_API_ID,\r\n  // databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  // measurementId: process.env.REACT_APP_MESSAGIN_ID,\r\n};\r\n// REACT_APP_MEASUREMENT_Id=G-8GSGZQ44ST*/\r\n// REACT_APP_DATABASE_URL=https://myapp-project-123.firebaseio.com\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","/* eslint-disable no-unused-vars */\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google\r\n          <FontAwesomeIcon icon={faGoogle} style={{ marginLeft: 4 }} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github\r\n          <FontAwesomeIcon icon={faGithub} style={{ marginLeft: 4 }} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweer = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`tweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(nweetObj, newNweet);\r\n    await dbService.doc(`tweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                  value={newNweet}\r\n                  required\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Udate Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Nweer;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      createId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"tweets\").add(nweetObj);\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const clearAttachment = (evt) => setAttachment(null);\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={tweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={clearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  // console.log(userObj);\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"tweets\").onSnapshot((snapshot) => {\r\n      // console.log(\"somethie happened\");\r\n      const tweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(tweetArray);\r\n    });\r\n  }, []);\r\n  // console.log(nweets);\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.createId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  console.log(userObj);\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}>\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"tweets\")\r\n      .where(\"createId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const onSubmit = async (evt) => {\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  const onChange = (evt) => {\r\n    const {\r\n      target: { value },\r\n    } = evt;\r\n    console.log(value);\r\n    setNewDisplayName(value);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          placeholder=\"Display name\"\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span onClick={onLogOutClick} className=\"formBtn cancelBtn logOut\">\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    // 로그인이나 로그아웃 할때, 또는 어플리케이션이 초기화 될 때\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        // setIsLoggedIn(true);\n        // 로그인이 됬을떄\n        // 로그인이 됬다면 user를 사용\n      } else {\n        setUserObj(null);\n      }\n      // else {\n      // setUserObj(false);\n      // setIsLoggedIn(false);\n      // }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./style.css\";\n// import firebase from \"fbase\";\n// console.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}